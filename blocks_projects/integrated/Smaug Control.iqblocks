{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">purpleDump</variable><variable id=\"xH}):IDpMrPFXt:m,dkP\">greenDump</variable><variable id=\"H(${q`904jK_x8.)[m-p\">intake</variable></variables><comment id=\"MBK$F-HiRnSQ1IeIvm8j\" x=\"662\" y=\"-228\" h=\"135.45831298828125\" w=\"290.26171875\">Project Name: Smaug Control\nSeason: Full Volume\nRobot Configuration: 2.0 Page E5\nAuthor(s): Henry\nCreated: 1/29/2024\nDescription: Driver control program for our second robot, Smaug\n</comment><block type=\"iq_events_when_started\" id=\"28$aT8GUV#=Gi7QLXE3(\" x=\"30\" y=\"-230\"><next><block type=\"iq_other_comment\" id=\"v_tPr@o@Ll4Q6m#;!MdM\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"lzPyTPNUG`Dy:GxZ-R+2\"><field name=\"comment\">When the program starts up we set up things how we need them.</field></shadow></value><next><block type=\"iq_other_comment\" id=\"bR;I+9@!bp6^b)-ROD(s\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"V$X5tVMcL[l:-X]_S;P1\"><field name=\"comment\">First we set stopping to hold for the lifter so it stays in place when we lift it</field></shadow></value><next><block type=\"iq_motion_set_motor_stopping\" id=\"zn;m^5d[*.pZ2iqO~?(5\"><field name=\"MOTOR\">Lifter</field><field name=\"MODE\">hold</field><next><block type=\"iq_other_comment\" id=\"con-}:FnTPDa:-+2^eE/\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"JH]6Rc-{eKR(C)e2N.m+\"><field name=\"comment\">Then we set its velocity to 100% so we can lift as fast as possible</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"!Lv=B)H{5/VfdnP$#uu=\"><field name=\"MOTOR\">Lifter</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"eG,V4%z@yGNPRC*.c2eo\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_other_comment\" id=\"U3aml-$.x!7uLu.KtA}@\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"$MZjx@geDp.PzSg,w-RH\"><field name=\"comment\">Then we set up the different lift positions. First we make sure that</field></shadow></value><next><block type=\"iq_other_comment\" id=\"ls9`+%*RfPM1U*WwB;N%\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"-:lrq@ZOF^d(%,q%l,na\"><field name=\"comment\">the 0 position is where it starts, as far down as it can go.</field></shadow></value><next><block type=\"iq_motion_set_motor_position\" id=\"1q[S{q:g5Bz@Soai0#o)\"><field name=\"MOTOR\">Lifter</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\";d=)}626;2?{QEOT@h;=\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_other_comment\" id=\"XsCH};ejgXb]d+-)LLc{\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"aKfPWO?J2$Zdc)c}NFTG\"><field name=\"comment\">Then we set variables for the different heights used on buttons.</field></shadow></value><next><block type=\"iq_other_comment\" id=\"U0{u]#m4zZVpe724G86W\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"a;r%Yh@dmjKOF[}NDG#m\"><field name=\"comment\">This way, our code is easier to understand because you see a</field></shadow></value><next><block type=\"iq_other_comment\" id=\"o~M7j:L?[M7BInwT#rZW\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"!|6(=y^0bV$r{]:rB].L\"><field name=\"comment\">variable name that means something instead of a magic number.</field></shadow></value><next><block type=\"iq_other_comment\" id=\"++NeXR].f|mzZ=8@[W[+\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"_dc*/J06-[=j%_BAZtD/\"><field name=\"comment\">Plus, if we used these numbers in more than one place, this way</field></shadow></value><next><block type=\"iq_other_comment\" id=\"ewC@C*~Q[[QV^oeL9[FH\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"]E!MB4u(w7Q20]oq`$BP\"><field name=\"comment\">we only have to change them in one place, and don't have to worry</field></shadow></value><next><block type=\"iq_other_comment\" id=\"c2L=gA`,FazD(,Z7HJ/-\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"%Hy)t_K=M|3Ms%}prCMZ\"><field name=\"comment\">about forgetting something.</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"z-MIlGjF)ytq2km|c)=8\"><field name=\"VARIABLE\" id=\"_2.^beQjx|FGt38A,8(E\">purpleDump</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"A4IqKmIwdCX*W_dy%(:5\"><field name=\"NUM\">450</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"~/2drbRP]L@.K[BCy}c{\"><field name=\"VARIABLE\" id=\"xH}):IDpMrPFXt:m,dkP\">greenDump</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"kwqy.E!spa~yo5;X7vt=\"><field name=\"NUM\">1500</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"QW+z_EPYwm=uE89Z7DwM\"><field name=\"VARIABLE\" id=\"H(${q`904jK_x8.)[m-p\">intake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"_n#DAcjnC/i*7G!Pj,v3\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_other_comment\" id=\"QMAnEv.HmV=V%jBcRMsw\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"nJpecXXsB%M0}HKYHSCa\"><field name=\"comment\">Last we set the intake velocity to 100% too so we can pick up block quick</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"7BEIp?@[+3m/0@%Xo@77\"><field name=\"MOTOR\">Intake</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"oQ_q,6DZn@,v*g?:m:%j\"><field name=\"NUM\">100</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\".3~L1qcjjn%[:F(7,l`o\" disabled=\"true\" x=\"670\" y=\"-90\"><next><block type=\"iq_other_comment\" id=\"|g)(:0MJU)rPdE~l=x}/\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"eP`Pt$Mi2SB-muOYx.7,\"><field name=\"comment\">We used this block to help figure out the positions to set for the lifter</field></shadow></value><next><block type=\"iq_other_comment\" id=\"${Jn)O-g`o_j-k3k:_+h\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"ygR!P84}H6]=@iI-+/wP\"><field name=\"comment\">by configuring the R Up/Down buttons to move the lifter Motor Group</field></shadow></value><next><block type=\"iq_other_comment\" id=\"-kXwl-G=I;4IRLt5Cp!@\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"{4hQ]tT$}Z{(nMKI/GEX\"><field name=\"comment\">and recording the numbers from the console.</field></shadow></value><next><block type=\"iq_other_comment\" id=\"M{rtVQ:M`-(tl:$`VF)-\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"[zwIzo2_itUM+~2V%6e)\"><field name=\"comment\">We left it here in case we need it again, but it's disabled so it doesn't do</field></shadow></value><next><block type=\"iq_other_comment\" id=\"~QA_cXtRnxguPn(:o}jQ\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"`BT)S`BjtYQKiOI)UM(B\"><field name=\"comment\">anything for now.</field></shadow></value><next><block type=\"iq_control_forever\" id=\"Z|@8LHdD5MGegvqIHll2\"><statement name=\"SUBSTACK\"><block type=\"iq_looks_print_new\" id=\"-~KM/5T+i2{W/7I-NGz/\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"*Cxmv|DP^PL[]co7epec\"><field name=\"TEXT\">A: </field></shadow><block type=\"iq_sensing_position_of_motor\" id=\"Ki:Q5hNLkpb9JZ3v~m(`\"><field name=\"MOTOR\">Lifter</field><field name=\"UNITS\">deg</field></block></value><next><block type=\"iq_control_wait\" id=\"d9E5Dg?sp5M0g=(fOO1s\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"[CYfPaBPLKgd#ICU+XoV\"><field name=\"NUM\">0.5</field></shadow></value></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"_]nMRShYpmbx^_WqC)*g\" x=\"670\" y=\"470\"><field name=\"BUTTON\">ButtonEUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_other_comment\" id=\"Iwz!nCE$*Pi7|-m9frhV\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"l$=qK=9i[z.OcK4%F@L{\"><field name=\"comment\">This button starts the intake so we don't have to hold down</field></shadow></value><next><block type=\"iq_other_comment\" id=\"NfmW2)W[IbzXTZP`X(;=\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"f1tj5xrn_$*Tp}|J:dnW\"><field name=\"comment\">a button to keep it going while we drive</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"4J~Av2zC}P!m}%yUI)$L\"><field name=\"MOTOR\">Intake</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\",0@U7H4_NE~S2uB9v8E:\" x=\"670\" y=\"710\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_other_comment\" id=\"uKID+CKO|uB$aj`~($n2\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"OWf1!U5(v*X${RLKPHP-\"><field name=\"comment\">This button stops the intake</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"vG_{qiaA?Jqg:6tb1|uH\"><field name=\"MOTOR\">Intake</field></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"oH(},C9Uudh7NGK8e#eY\" x=\"670\" y=\"890\"><field name=\"BUTTON\">ButtonLDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_other_comment\" id=\"$.Bcu=`RR_;6^[~v(2fc\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"ijcNeIb;2f^{FX)pL{vW\"><field name=\"comment\">This button lowers the basket to the position where it can intake blocks</field></shadow></value><next><block type=\"iq_motion_spin_to_position\" id=\"uOQabf[bxXr=GmjncAlA\"><field name=\"MOTOR\">Lifter</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"{6W:$SA.H**BXqeJ_FW=\"><field name=\"NUM\">90</field></shadow><block type=\"iq_variables_variable\" id=\"W6B}oIIHj38wA2I3fZd#\"><field name=\"VARIABLE\" id=\"H(${q`904jK_x8.)[m-p\">intake</field></block></value></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"skwh!0vZ3tWPT4,V^_}M\" x=\"670\" y=\"1070\"><field name=\"BUTTON\">ButtonRUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_other_comment\" id=\"=khZ/oTwwqg{63xstI?a\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"8sO-5Qj{Li%*|5pgDq5+\"><field name=\"comment\">This button lifts the basket up to the position where it can dump green</field></shadow></value><next><block type=\"iq_other_comment\" id=\")+-]c]pdru9Kh9~4Bg(s\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"T~mL`{#3cu|C2`S0!?%G\"><field name=\"comment\">blocks from the lower area</field></shadow></value><next><block type=\"iq_motion_spin_to_position\" id=\"xA3:nltPjSJ%!A]M8!4_\"><field name=\"MOTOR\">Lifter</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"OIM4}l-7Fjd:x$BIG9:r\"><field name=\"NUM\">90</field></shadow><block type=\"iq_variables_variable\" id=\"-[]3w/DQ*%Cf-)ZlvV{E\"><field name=\"VARIABLE\" id=\"xH}):IDpMrPFXt:m,dkP\">greenDump</field></block></value></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"/^#+0%5u%pl4cstpP}Y|\" x=\"670\" y=\"1310\"><field name=\"BUTTON\">ButtonRDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_other_comment\" id=\"Qd%2w26^DhESE[eLkJY!\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"hlRp1Xj!X},3J/)WuuK)\"><field name=\"comment\">This button lifts the basket up to the position where it can dump purple</field></shadow></value><next><block type=\"iq_other_comment\" id=\"%iw2~n`Nuw7F8v.IHa8F\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"#@cZ8czo};_{v:htrbAm\"><field name=\"comment\">blocks from the upper area</field></shadow></value><next><block type=\"iq_motion_spin_to_position\" id=\"$b4O=cd!m7Mya%+zfx/b\"><field name=\"MOTOR\">Lifter</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"x2F/Vzdh=|pwwnIRG//E\"><field name=\"NUM\">90</field></shadow><block type=\"iq_variables_variable\" id=\"SKhUZm11.;?j:aih+hsI\"><field name=\"VARIABLE\" id=\"_2.^beQjx|FGt38A,8(E\">purpleDump</field></block></value></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[7,1,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"integrated","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[9],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"in","rev":"out"},"triportSourcePort":22},{"port":[6,12],"name":"Lifter","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"raise","rev":"lower","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"tank"},"triportSourcePort":22}],"slot":2,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT7, 1, false);\nmotor RightDriveSmart = motor(PORT1, 1, true);\n\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, BrainInertial, 200);\n\nmotor Intake = motor(PORT9, false);\nmotor LifterMotorA = motor(PORT6, false);\nmotor LifterMotorB = motor(PORT12, true);\nmotor_group Lifter = motor_group(LifterMotorA, LifterMotorB);\n\ncontroller Controller = controller();\n\nbool vexcode_initial_drivetrain_calibration_completed = false;\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n  vexcode_initial_drivetrain_calibration_completed = true;\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA\n      // right = AxisD\n      int drivetrainLeftSideSpeed = Controller.AxisA.position();\n      int drivetrainRightSideSpeed = Controller.AxisD.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat purpleDump, greenDump, intake;\n\n// \"when started\" hat block\nint whenStarted1() {\n  // When the program starts up we set up things how we need them.\n  // First we set stopping to hold for the lifter so it stays in place when we lift it\n  Lifter.setStopping(hold);\n  // Then we set its velocity to 100% so we can lift as fast as possible\n  Lifter.setVelocity(100.0, percent);\n  // Then we set up the different lift positions. First we make sure that\n  // the 0 position is where it starts, as far down as it can go.\n  Lifter.setPosition(0.0, degrees);\n  // Then we set variables for the different heights used on buttons.\n  // This way, our code is easier to understand because you see a\n  // variable name that means something instead of a magic number.\n  // Plus, if we used these numbers in more than one place, this way\n  // we only have to change them in one place, and don't have to worry\n  // about forgetting something.\n  purpleDump = 450.0;\n  greenDump = 1500.0;\n  intake = 0.0;\n  // Last we set the intake velocity to 100% too so we can pick up block quick\n  Intake.setVelocity(100.0, percent);\n  return 0;\n}\n\n// \"when Controller ButtonEUp pressed\" hat block\nvoid onevent_ControllerButtonEUp_pressed_0() {\n  // This button starts the intake so we don't have to hold down\n  // a button to keep it going while we drive\n  Intake.spin(forward);\n}\n\n// \"when Controller ButtonLUp pressed\" hat block\nvoid onevent_ControllerButtonLUp_pressed_0() {\n  // This button stops the intake\n  Intake.stop();\n}\n\n// \"when Controller ButtonLDown pressed\" hat block\nvoid onevent_ControllerButtonLDown_pressed_0() {\n  // This button lowers the basket to the position where it can intake blocks\n  Lifter.spinToPosition(intake, degrees, true);\n}\n\n// \"when Controller ButtonRUp pressed\" hat block\nvoid onevent_ControllerButtonRUp_pressed_0() {\n  // This button lifts the basket up to the position where it can dump green\n  // blocks from the lower area\n  Lifter.spinToPosition(greenDump, degrees, true);\n}\n\n// \"when Controller ButtonRDown pressed\" hat block\nvoid onevent_ControllerButtonRDown_pressed_0() {\n  // This button lifts the basket up to the position where it can dump purple\n  // blocks from the upper area\n  Lifter.spinToPosition(purpleDump, degrees, true);\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  // register event handlers\n  Controller.ButtonEUp.pressed(onevent_ControllerButtonEUp_pressed_0);\n  Controller.ButtonLUp.pressed(onevent_ControllerButtonLUp_pressed_0);\n  Controller.ButtonLDown.pressed(onevent_ControllerButtonLDown_pressed_0);\n  Controller.ButtonRUp.pressed(onevent_ControllerButtonRUp_pressed_0);\n  Controller.ButtonRDown.pressed(onevent_ControllerButtonRDown_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}