{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">armMaximum</variable></variables><comment id=\"#p;z:5oHHO-IGMo6]Qna\" x=\"461\" y=\"-4\" h=\"242\" w=\"324\">Project Name: DragonBot Skills\nSeason: Full Volume\nRobot Configuration: 1.0 E1\nAuthor(s): Henry\nCreated: 11/11/2023\nDescription: Autonomous Programming Skills for the DragonBot: our inital robot modified from the Byte Hero Bot\n</comment><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"10\" y=\"10\"><next><block type=\"iq_looks_set_touchled_color\" id=\"Qqa@,fB1(t4_z_K;*0#y\"><field name=\"TOUCHLED\">rightStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"lI2HWc[c*LX`nI^mTMjM\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"%B9LQkL22HQ0=zzwr6JN\"><field name=\"TOUCHLED\">leftStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"oI!`j}/uPH_Rrd1aq_G!\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"=6l:;Ur5Xoo$b3L8q5iq\"><field name=\"VARIABLE\" id=\"_2.^beQjx|FGt38A,8(E\">armMaximum</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"NB4FB(-5Ut6vhF]L;dHF\"><field name=\"NUM\">375</field></shadow></value><next><block type=\"iq_motion_set_motor_stopping\" id=\"5.S|WjZ;i2};s3=vRS*o\"><field name=\"MOTOR\">arm</field><field name=\"MODE\">hold</field><next><block type=\"iq_motion_set_motor_velocity\" id=\"~m}5lp83DjO,HQ]5d,Jx\"><field name=\"MOTOR\">arm</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"ZD}`4SnjJ{zANR(oxyb/\"><field name=\"NUM\">25</field></shadow></value><next><block type=\"iq_motion_set_motor_position\" id=\"`pX_tN0@7!Z.E92z,ve9\"><field name=\"MOTOR\">arm</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\",fXc9RvxG_c~0Bua;Jev\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"3EvJ]W;H5x:6`PW8eX-b\"><field name=\"MOTOR\">intake</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"WP=T~)DnorS{RYO=^i,d\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_drivetrain_set_drive_velocity\" id=\"Q^L5mWFYA#,eH7;vU8|3\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"EDESckJ6eN.K%}9$SjwY\"><field name=\"NUM\">60</field></shadow></value><next><block type=\"iq_drivetrain_set_turn_velocity\" id=\"p19#fK*J{FZyrB)Bt(|p\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"GpQ!P$FwS4M~{5X-iojJ\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"iq_drivetrain_set_drive_stopping\" id=\"zx/D4rc.L:{LDfH)LcT(\"><field name=\"MODE\">brake</field><next><block type=\"iq_looks_set_touchled_color\" id=\"P~ZHo6K@qs)MCowA11p2\"><field name=\"TOUCHLED\">rightStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"ilfpz|}s~{=Mj(#C*^TE\"><field name=\"COLOR\">yellow</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"t]lW$3]kHpuC1;K3+T{J\"><field name=\"TOUCHLED\">leftStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"BojR30Y?q7[W@%TagR$A\"><field name=\"COLOR\">yellow</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\"e6W$kNeGkH(9K],M1i:3\" disabled=\"true\" x=\"830\" y=\"10\"><next><block type=\"iq_other_comment\" id=\"O3s-Hyc|.}h)~TP@JRmk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"lhtWZ9k(IpSa]TX!tk*]\"><field name=\"comment\">This is used for testing.</field></shadow></value><next><block type=\"iq_control_forever\" id=\"r6jmVvPn4z`2^CWa!!JH\"><statement name=\"SUBSTACK\"><block type=\"iq_looks_print_new\" id=\"EQ-h=_Za9(61n27h%@u4\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"JteTG2lTfhrZ=.X_cY#Y\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_position_of_motor\" id=\"1mHdT5D=wBV066Sr;Ww/\"><field name=\"MOTOR\">arm</field><field name=\"UNITS\">deg</field></block></value><next><block type=\"iq_control_wait\" id=\"oOPe7Lq@lW@mGO})ThPD\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"isq8ZcGpkhugNTJii0-S\"><field name=\"NUM\">0.5</field></shadow></value></block></next></block></statement></block></next></block></next></block><block type=\"iq_events_when_brain_button\" id=\"/]wXd_v}R$rXHx!=b]ml\" x=\"430\" y=\"250\"><field name=\"BUTTON\">Up</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_sensing_reset_timer\" id=\"/q-YYE6AyW8VQetY$ON@\"><next><block type=\"iq_looks_set_touchled_color\" id=\"}H=!X[~0^?!Nz8]^$kz;\"><field name=\"TOUCHLED\">rightStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"5(5tiAQJAd5R(#%gn~Ro\"><field name=\"COLOR\">green</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"B{.:bO]ABk8;m3,~AACl\"><field name=\"TOUCHLED\">leftStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"X5.jff+*k;.I.5[=|0zt\"><field name=\"COLOR\">green</field></shadow></value><next><block type=\"iq_drivetrain_drive_for\" id=\"EA;.zc)y]OXH~?abMCnB\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"s8n9$=7fw6;Owg$mnHyB\"><field name=\"NUM\">37</field></shadow></value><next><block type=\"iq_drivetrain_turn_to_heading\" id=\"LBe(64b6M*r/%w]E1UkS\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"pTiDBOJyw9!!x+hN^}5g\"><field name=\"NUM\">315</field></shadow></value><next><block type=\"iq_drivetrain_drive_for\" id=\"3#=sim,*Sur4(b96fC%g\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"k]mFv.Z~!S)+:m~K$z]2\"><field name=\"NUM\">9</field></shadow></value><next><block type=\"iq_motion_spin_to_position\" id=\"m,3,x71w]gF7s633Dk#v\"><field name=\"MOTOR\">arm</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"zOHbG4SS=^?6Vr33PC8x\"><field name=\"NUM\">90</field></shadow><block type=\"iq_variables_variable\" id=\"iQW.NX(.1l~0!x9bpHx}\"><field name=\"VARIABLE\" id=\"_2.^beQjx|FGt38A,8(E\">armMaximum</field></block></value><next><block type=\"iq_drivetrain_drive_for\" id=\"1=_!jk?l$LZ,JK#grxyn\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"leApbv:x#4_Qw!/Ck!_a\"><field name=\"NUM\">6</field></shadow></value><next><block type=\"iq_drivetrain_turn_to_heading\" id=\"z$TKpmnlaoTn.#=Fmd,t\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"Zy`+ZF{Z,fKz]XT|Xj~,\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"iq_drivetrain_drive_for\" id=\"b](pH^9kl(Mi6BU#y*3X\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"k;]xyqX/#`bkSb[T2oR9\"><field name=\"NUM\">16</field></shadow></value><next><block type=\"iq_drivetrain_turn_to_heading\" id=\"P+!a9kY4Qd?ovY;u-}j4\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"e[]F$H]zo{35OiorGX~b\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_drivetrain_drive_for\" id=\"xA9]xe+V?%^])L+R{G0B\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"y~9$6eOEZ02:zKPS)z5]\"><field name=\"NUM\">12</field></shadow></value><next><block type=\"iq_drivetrain_turn_to_heading\" id=\"M4CKNbMiu$OF1*w)d8Wy\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"J|NUs%NU{{rQOzwQ0ccU\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"iq_drivetrain_drive_for\" id=\"Hykffu7`q3SY8?`(+F0(\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"1|.u/8N-hr3fLT$G[3%s\"><field name=\"NUM\">16</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"p~}~v8WVRrO#N_jHFko$\"><field name=\"TOUCHLED\">rightStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"z~02:3^[tW}Ke8PA;Og7\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"z8qO2Q}zqb5A#BT^PI}1\"><field name=\"TOUCHLED\">leftStatus</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"y6y`|4x4;VHqYMU1!+A6\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_set_font\" id=\"kexP`W~q=V}nA,jz^iE@\"><field name=\"FONT\">mono60</field><next><block type=\"iq_looks_print_new\" id=\"np!{Q*oIrZJn^y4otq=n\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"jbSN1|jn]RSr2Fn(3W[W\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_timer_value\" id=\"a_3Bms@bPwL+^Ki+0#0Q\"></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,7,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"integrated","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[5,11],"name":"arm","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"raise","rev":"lower","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[6],"name":"intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"in","rev":"out"},"triportSourcePort":22},{"port":[8],"name":"rightStatus","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[2],"name":"leftStatus","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22}],"slot":3,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT7, 1, true);\n\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, BrainInertial, 200);\n\nmotor armMotorA = motor(PORT5, false);\nmotor armMotorB = motor(PORT11, true);\nmotor_group arm = motor_group(armMotorA, armMotorB);\n\nmotor intake = motor(PORT6, false);\ntouchled rightStatus = touchled(PORT8);\ntouchled leftStatus = touchled(PORT2);\n\nbool vexcode_initial_drivetrain_calibration_completed = false;\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n  vexcode_initial_drivetrain_calibration_completed = true;\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat armMaximum;\n\n// \"when started\" hat block\nint whenStarted1() {\n  rightStatus.setColor(red);\n  leftStatus.setColor(red);\n  armMaximum = 375.0;\n  arm.setStopping(hold);\n  arm.setVelocity(25.0, percent);\n  arm.setPosition(0.0, degrees);\n  intake.setVelocity(100.0, percent);\n  Drivetrain.setDriveVelocity(60.0, percent);\n  Drivetrain.setTurnVelocity(50.0, percent);\n  Drivetrain.setStopping(brake);\n  rightStatus.setColor(yellow);\n  leftStatus.setColor(yellow);\n  return 0;\n}\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when buttonLeft pressed\" hat block\nvoid onevent_buttonLeft_pressed_0() {\n  Brain.Timer.reset();\n  rightStatus.setColor(green);\n  leftStatus.setColor(green);\n  Drivetrain.driveFor(forward, 37.0, inches, true);\n  Drivetrain.turnToHeading(315.0, degrees, true);\n  Drivetrain.driveFor(forward, 9.0, inches, true);\n  arm.spinToPosition(armMaximum, degrees, false);\n  Drivetrain.driveFor(reverse, 6.0, inches, true);\n  Drivetrain.turnToHeading(90.0, degrees, true);\n  Drivetrain.driveFor(forward, 16.0, inches, true);\n  Drivetrain.turnToHeading(0.0, degrees, true);\n  Drivetrain.driveFor(forward, 12.0, inches, true);\n  Drivetrain.turnToHeading(90.0, degrees, true);\n  Drivetrain.driveFor(forward, 16.0, inches, true);\n  rightStatus.setColor(red);\n  leftStatus.setColor(red);\n  Brain.Screen.setFont(mono60);\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Brain.Timer.value()));\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  // register event handlers\n  Brain.buttonLeft.pressed(onevent_buttonLeft_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}